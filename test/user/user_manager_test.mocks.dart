// Mocks generated by Mockito 5.0.7 from annotations
// in flutter_template/test/user/user_manager_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:chopper/src/base.dart' as _i2;
import 'package:chopper/src/response.dart' as _i3;
import 'package:flutter_template/model/user/credentials.dart' as _i7;
import 'package:flutter_template/model/user/user.dart' as _i6;
import 'package:flutter_template/network/user_api_service.dart' as _i4;
import 'package:flutter_template/user/user_hooks.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:single_item_storage/storage.dart' as _i9;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeChopperClient extends _i1.Fake implements _i2.ChopperClient {}

class _FakeType extends _i1.Fake implements Type {}

class _FakeResponse<BodyType> extends _i1.Fake
    implements _i3.Response<BodyType> {}

/// A class which mocks [UserApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserApiService extends _i1.Mock implements _i4.UserApiService {
  MockUserApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ChopperClient get client =>
      (super.noSuchMethod(Invocation.getter(#client),
          returnValue: _FakeChopperClient()) as _i2.ChopperClient);
  @override
  set client(_i2.ChopperClient? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  Type get definitionType =>
      (super.noSuchMethod(Invocation.getter(#definitionType),
          returnValue: _FakeType()) as Type);
  @override
  _i5.Future<_i3.Response<dynamic>> signUp(_i6.User? user) =>
      (super.noSuchMethod(Invocation.method(#signUp, [user]),
              returnValue:
                  Future<_i3.Response<dynamic>>.value(_FakeResponse<dynamic>()))
          as _i5.Future<_i3.Response<dynamic>>);
  @override
  _i5.Future<_i3.Response<_i7.Credentials>> login(
          String? username, String? password) =>
      (super.noSuchMethod(Invocation.method(#login, [username, password]),
              returnValue: Future<_i3.Response<_i7.Credentials>>.value(
                  _FakeResponse<_i7.Credentials>()))
          as _i5.Future<_i3.Response<_i7.Credentials>>);
  @override
  _i5.Future<_i3.Response<_i6.User>> getUserProfile({String? authHeader}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserProfile, [], {#authHeader: authHeader}),
              returnValue: Future<_i3.Response<_i6.User>>.value(
                  _FakeResponse<_i6.User>()))
          as _i5.Future<_i3.Response<_i6.User>>);
  @override
  _i5.Future<_i3.Response<_i6.User>> updateUserProfile(_i6.User? user) =>
      (super.noSuchMethod(Invocation.method(#updateUserProfile, [user]),
              returnValue: Future<_i3.Response<_i6.User>>.value(
                  _FakeResponse<_i6.User>()))
          as _i5.Future<_i3.Response<_i6.User>>);
  @override
  _i5.Future<_i3.Response<void>> resetPassword(String? email) =>
      (super.noSuchMethod(Invocation.method(#resetPassword, [email]),
              returnValue:
                  Future<_i3.Response<void>>.value(_FakeResponse<void>()))
          as _i5.Future<_i3.Response<void>>);
  @override
  _i5.Future<_i3.Response<dynamic>> addNotificationsToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#addNotificationsToken, [token]),
              returnValue:
                  Future<_i3.Response<dynamic>>.value(_FakeResponse<dynamic>()))
          as _i5.Future<_i3.Response<dynamic>>);
  @override
  _i5.Future<_i3.Response<void>> logout() => (super.noSuchMethod(
          Invocation.method(#logout, []),
          returnValue: Future<_i3.Response<void>>.value(_FakeResponse<void>()))
      as _i5.Future<_i3.Response<void>>);
  @override
  _i5.Future<_i3.Response<void>> deactivate() => (super.noSuchMethod(
          Invocation.method(#deactivate, []),
          returnValue: Future<_i3.Response<void>>.value(_FakeResponse<void>()))
      as _i5.Future<_i3.Response<void>>);
}

/// A class which mocks [LoginHook].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginHook<U> extends _i1.Mock implements _i8.LoginHook<U> {
  MockLoginHook() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> postLogin(U? user) =>
      (super.noSuchMethod(Invocation.method(#postLogin, [user]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
}

/// A class which mocks [LogoutHook].
///
/// See the documentation for Mockito's code generation for more information.
class MockLogoutHook extends _i1.Mock implements _i8.LogoutHook {
  MockLogoutHook() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> postLogout() =>
      (super.noSuchMethod(Invocation.method(#postLogout, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
}

/// A class which mocks [Storage].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorage<E> extends _i1.Mock implements _i9.Storage<E> {
  MockStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<E> save(E? item) =>
      (super.noSuchMethod(Invocation.method(#save, [item]),
          returnValue: Future<E>.value(null)) as _i5.Future<E>);
  @override
  _i5.Future<E?> get() => (super.noSuchMethod(Invocation.method(#get, []),
      returnValue: Future<E?>.value(null)) as _i5.Future<E?>);
  @override
  _i5.Future<void> delete() =>
      (super.noSuchMethod(Invocation.method(#delete, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
}
